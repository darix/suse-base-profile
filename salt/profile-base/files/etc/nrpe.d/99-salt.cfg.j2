#
# suse-base-profile
#
# Copyright (C) 2025   darix
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

{%- set check_basedir = '/usr/lib/nagios/plugins' %}
{%- for check, check_data in pillar.monitoring.checks.items() %}
  {%- set cmd = check %}
  {%- set args = '' %}
  {%- if check_data and 'check' in check_data %}
    {%- set cmd = check_data['check'] %}
  {%- endif %}
  {%- if not(cmd is match('^/')) %}
    {%- set cmd = check_basedir ~ '/' ~ cmd %}
  {%- endif %}
  {%- if check_data and 'args' in check_data %}
    {%- set args = check_data['args'] %}
  {%- endif %}
  {%- if check == 'check_ntp' %}
    {%- set args = args ~ ' -H ' ~ pillar.ntp.server[0] %}
  {%- endif %}
  {%- if check == 'check_partition' %}
    {%- set cmd = check_basedir ~ '/check_disk' %}
    {%- for partition, part_data in check_data.partitions.items() %}
      {%- set check_label = check ~ '_' ~ partition %}
      {%- set warn        = part_data.get('warn',     pillar.monitoring.defaults.checks.check_partition.warn) %}
      {%- set critical    = part_data.get('critical', pillar.monitoring.defaults.checks.check_partition.critical) %}
      {%- set mountpoint  = part_data.mountpoint %}
      {%- set args        = '-u GB -w ' ~ warn ~ ' -c ' ~ critical ~ ' -p ' ~ mountpoint %}
command[{{ check_label }}]={{ cmd }} {{ args }}
    {%- endfor %}
  {%- elif check == 'check_iostat' %}
    {%- set cmd = check_basedir ~ '/check_iostat' %}
    {%- for device_name, device_data in check_data.partitions.items() %}

      {%- set cmdline_options = [] %}
      {%- set check_iostat_label = check ~ '_' ~ device_name %}

      {%- if 'rw' in device_data and 'warning' in device_data['rw'] and 'critical' in device_data['rw'] %}
      {%- do cmdline_options.append("-w " ~ device_data['rw']['warning']) %}
      {%- do cmdline_options.append("-c " ~ device_data['rw']['critical']) %}
      {%- endif %}

      {%- if 'iowait' in device_data and 'warning' in device_data['iowait'] and 'critical' in device_data['iowait'] %}
      {%- do cmdline_options.append("-W " ~ device_data['iowait']['warning']) %}
      {%- do cmdline_options.append("-C " ~ device_data['iowait']['critical']) %}
      {%- endif %}

      {%- if 'utilization' in device_data and 'warning' in device_data['utilization'] and 'critical' in device_data['utilization'] %}
      {%- do cmdline_options.append("-X " ~ device_data['utilization']['warning']) %}
      {%- do cmdline_options.append("-Y " ~ device_data['utilization']['critical']) %}
      {%- endif %}
command[{{ check_iostat_label }}]={{ cmd }} -d {{ device_data.device }} {{ cmdline_options|join(' ') }}
    {%- endfor %}
  {%- else %}
command[{{ check }}]={{ cmd }} {{ args }}
  {%- endif %}
{%- endfor %}
{%- for interface in salt.filter_interfaces.interface_names_with_global_addresses()|sort %}
  {%- set check = 'check_' ~ interface %}
  {%- set cmd = check_basedir ~ '/check_eth' %}
  {%- set args = ' -i ' ~ interface ~ ' -w 3G -C 6G -b 10G' %}
command[{{ check }}]={{ cmd }} {{ args }}
{%- endfor %}
